name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"

      - name: Build binary
        run: go build -o app-linux-amd64

      - name: Run tests
        run: go test -v ./...

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-app-binary
          path: app-linux-amd64

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Ensure remote directory exists (as root)
        run: |
          echo "üîß Memastikan direktori target tersedia di VPS..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }} \
            root@${{ secrets.VPS_HOST }} \
            "mkdir -p /var/www/order-management-api && chmod 755 /var/www/order-management-api"

      - name: Upload binary using sshpass + scp (as root)
        run: |
          echo "üì¶ Mengunggah binary ke VPS sebagai root..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" \
            scp -o StrictHostKeyChecking=no -P ${{ secrets.VPS_PORT }} \
            app-linux-amd64 \
            root@${{ secrets.VPS_HOST }}:/var/www/order-management-api/app-linux-amd64

      - name: List files in target directory (debugging)
        run: |
          echo "üìÅ Menampilkan isi folder target (debug)..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }} \
            root@${{ secrets.VPS_HOST }} \
            "ls -lah /var/www/order-management-api"
